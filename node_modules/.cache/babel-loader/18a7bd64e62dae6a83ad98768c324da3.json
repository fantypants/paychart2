{"ast":null,"code":"import _classCallCheck from \"/home/matt/web/paycharts2/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/matt/web/paycharts2/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/matt/web/paycharts2/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/matt/web/paycharts2/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/matt/web/paycharts2/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/matt/web/paycharts2/src/components/three/Scene.js\";\nimport React, { Component } from 'react';\nimport * as THREE from 'three';\nimport * as OrbitControls from 'three-orbitcontrols';\nvar DEGS_TO_RADS = Math.PI / 180;\nvar DIGIT_0 = 48;\nvar DIGIT_9 = 57;\nvar COMMA = 44;\nvar SPACE = 32;\nvar PERIOD = 46;\nvar MINUS = 45;\n\nvar Scene =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Scene, _Component);\n\n  function Scene() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Scene);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Scene)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onWindowResize = function () {\n      _this.camera.aspect = window.innerWidth / window.innerHeight;\n\n      _this.camera.updateProjectionMatrix();\n\n      _this.renderer.setSize(window.innerWidth, window.innerHeight);\n    };\n\n    _this.transformSVGPath = function (pathStr) {\n      var path = new THREE.ShapePath();\n      var idx = 1,\n          len = pathStr.length,\n          activeCmd,\n          x = 0,\n          y = 0,\n          nx = 0,\n          ny = 0,\n          firstX = null,\n          firstY = null,\n          x1 = 0,\n          x2 = 0,\n          y1 = 0,\n          y2 = 0,\n          rx = 0,\n          ry = 0,\n          xar = 0,\n          laf = 0,\n          sf = 0,\n          cx,\n          cy;\n\n      var eatNum = function eatNum() {\n        var sidx,\n            c,\n            isFloat = false,\n            s; // eat delims\n\n        while (idx < len) {\n          c = pathStr.charCodeAt(idx);\n          if (c !== COMMA && c !== SPACE) break;\n          idx++;\n        }\n\n        if (c === MINUS) {\n          sidx = idx++;\n        } else {\n          sidx = idx;\n        } // eat number\n\n\n        while (idx < len) {\n          c = pathStr.charCodeAt(idx);\n\n          if (DIGIT_0 <= c && c <= DIGIT_9) {\n            idx++;\n            continue;\n          } else if (c === PERIOD) {\n            idx++;\n            isFloat = true;\n            continue;\n          }\n\n          s = pathStr.substring(sidx, idx);\n          return isFloat ? parseFloat(s) : parseInt(s);\n        }\n\n        s = pathStr.substring(sidx);\n        return isFloat ? parseFloat(s) : parseInt(s);\n      };\n\n      var nextIsNum = function nextIsNum() {\n        var c; // do permanently eat any delims...\n\n        while (idx < len) {\n          c = pathStr.charCodeAt(idx);\n          if (c !== COMMA && c !== SPACE) break;\n          idx++;\n        }\n\n        c = pathStr.charCodeAt(idx);\n        return c === MINUS || DIGIT_0 <= c && c <= DIGIT_9;\n      };\n\n      var canRepeat;\n      activeCmd = pathStr[0];\n\n      while (idx <= len) {\n        canRepeat = true;\n\n        switch (activeCmd) {\n          // moveto commands, become lineto's if repeated\n          case 'M':\n            x = eatNum();\n            y = eatNum();\n            path.moveTo(x, y);\n            activeCmd = 'L';\n            firstX = x;\n            firstY = y;\n            break;\n\n          case 'm':\n            x += eatNum();\n            y += eatNum();\n            path.moveTo(x, y);\n            activeCmd = 'l';\n            firstX = x;\n            firstY = y;\n            break;\n\n          case 'Z':\n          case 'z':\n            canRepeat = false;\n            if (x !== firstX || y !== firstY) path.lineTo(firstX, firstY);\n            break;\n          // - lines!\n\n          case 'L':\n          case 'H':\n          case 'V':\n            nx = activeCmd === 'V' ? x : eatNum();\n            ny = activeCmd === 'H' ? y : eatNum();\n            path.lineTo(nx, ny);\n            x = nx;\n            y = ny;\n            break;\n\n          case 'l':\n          case 'h':\n          case 'v':\n            nx = activeCmd === 'v' ? x : x + eatNum();\n            ny = activeCmd === 'h' ? y : y + eatNum();\n            path.lineTo(nx, ny);\n            x = nx;\n            y = ny;\n            break;\n          // - cubic bezier\n\n          case 'C':\n            x1 = eatNum();\n            y1 = eatNum();\n            break;\n\n          case 'S':\n            if (activeCmd === 'S') {\n              x1 = 2 * x - x2;\n              y1 = 2 * y - y2;\n            }\n\n            x1 = 2 * x - x2;\n            y1 = 2 * y - y2;\n            x2 = eatNum();\n            y2 = eatNum();\n            nx = eatNum();\n            ny = eatNum();\n            path.bezierCurveTo(x1, y1, x2, y2, nx, ny);\n            x = nx;\n            y = ny;\n            break;\n\n          case 'c':\n            x1 = x + eatNum();\n            y1 = y + eatNum();\n            break;\n\n          case 's':\n            if (activeCmd === 's') {\n              x1 = 2 * x - x2;\n              y1 = 2 * y - y2;\n            }\n\n            x2 = x + eatNum();\n            y2 = y + eatNum();\n            nx = x + eatNum();\n            ny = y + eatNum();\n            path.bezierCurveTo(x1, y1, x2, y2, nx, ny);\n            x = nx;\n            y = ny;\n            break;\n          // - quadratic bezier\n\n          case 'Q':\n            x1 = eatNum();\n            y1 = eatNum();\n            break;\n\n          case 'T':\n            if (activeCmd === 'T') {\n              x1 = 2 * x - x1;\n              y1 = 2 * y - y1;\n            }\n\n            nx = eatNum();\n            ny = eatNum();\n            path.quadraticCurveTo(x1, y1, nx, ny);\n            x = nx;\n            y = ny;\n            break;\n\n          case 'q':\n            x1 = x + eatNum();\n            y1 = y + eatNum();\n            break;\n\n          case 't':\n            if (activeCmd === 't') {\n              x1 = 2 * x - x1;\n              y1 = 2 * y - y1;\n            }\n\n            nx = x + eatNum();\n            ny = y + eatNum();\n            path.quadraticCurveTo(x1, y1, nx, ny);\n            x = nx;\n            y = ny;\n            break;\n          // - elliptical arc\n\n          case 'A':\n            rx = eatNum();\n            ry = eatNum();\n            xar = eatNum() * DEGS_TO_RADS;\n            laf = eatNum();\n            sf = eatNum();\n            nx = eatNum();\n            ny = eatNum();\n            if (rx !== ry) console.warn('Forcing elliptical arc to be a circular one:', rx, ry); // SVG implementation notes does all the math for us! woo!\n            // http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n            // step1, using x1 as x1'\n\n            x1 = Math.cos(xar) * (x - nx) / 2 + Math.sin(xar) * (y - ny) / 2;\n            y1 = -Math.sin(xar) * (x - nx) / 2 + Math.cos(xar) * (y - ny) / 2; // step 2, using x2 as cx'\n\n            var norm = Math.sqrt((rx * rx * ry * ry - rx * rx * y1 * y1 - ry * ry * x1 * x1) / (rx * rx * y1 * y1 + ry * ry * x1 * x1));\n            if (laf === sf) norm = -norm;\n            x2 = norm * rx * y1 / ry;\n            y2 = norm * -ry * x1 / rx; // step 3\n\n            cx = Math.cos(xar) * x2 - Math.sin(xar) * y2 + (x + nx) / 2;\n            cy = Math.sin(xar) * x2 + Math.cos(xar) * y2 + (y + ny) / 2;\n            var u = new THREE.Vector2(1, 0);\n            var v = new THREE.Vector2((x1 - x2) / rx, (y1 - y2) / ry);\n            var startAng = Math.acos(u.dot(v) / u.length() / v.length());\n            if (u.x * v.y - u.y * v.x < 0) startAng = -startAng; // we can reuse 'v' from start angle as our 'u' for delta angle\n\n            u.x = (-x1 - x2) / rx;\n            u.y = (-y1 - y2) / ry;\n            var deltaAng = Math.acos(v.dot(u) / v.length() / u.length()); // This normalization ends up making our curves fail to triangulate...\n\n            if (v.x * u.y - v.y * u.x < 0) deltaAng = -deltaAng;\n            if (!sf && deltaAng > 0) deltaAng -= Math.PI * 2;\n            if (sf && deltaAng < 0) deltaAng += Math.PI * 2;\n            path.absarc(cx, cy, rx, startAng, startAng + deltaAng, sf);\n            x = nx;\n            y = ny;\n            break;\n\n          default:\n            throw new Error('Wrong path command: ' + activeCmd);\n        } // just reissue the command\n\n\n        if (canRepeat && nextIsNum()) continue;\n        activeCmd = pathStr[idx++];\n      }\n\n      return path;\n    };\n\n    _this.addGeoObject = function (group, svgObject) {\n      var paths = svgObject.paths;\n      var depths = svgObject.depths;\n      var colors = svgObject.colors;\n      var center = svgObject.center;\n\n      for (var i = 0; i < paths.length; i++) {\n        var path = _this.transformSVGPath(paths[i]);\n\n        var color = new THREE.Color(colors[i]);\n        var material = new THREE.MeshLambertMaterial({\n          color: color,\n          emissive: color\n        });\n        var depth = depths[i];\n        var simpleShapes = path.toShapes(true);\n\n        for (var j = 0; j < simpleShapes.length; j++) {\n          var simpleShape = simpleShapes[j];\n          var shape3d = new THREE.ExtrudeBufferGeometry(simpleShape, {\n            depth: depth,\n            bevelEnabled: false\n          });\n          var mesh = new THREE.Mesh(shape3d, material);\n          mesh.rotation.x = Math.PI;\n          mesh.translateZ(-depth - 1);\n          mesh.translateX(-center.x);\n          mesh.translateY(-center.y);\n          group.add(mesh);\n        }\n      }\n    };\n\n    _this.initSVGObject = function () {\n      var obj = {}; /// The geo data from Taipei City, Keelung City, Taipei County in SVG form\n\n      obj.paths = [/// Taipei City\n      \"M366.2182,108.9780 L368.0329,110.3682 L367.5922,112.4411 L369.9258,116.0311 L368.9827,117.3543 \" + \"L371.5686,119.8491 L370.5599,121.7206 L372.9314,124.8009 L368.8889,126.7603 L369.2695,130.7622 \" + \"L366.1499,130.3388 L363.4698,128.1161 L362.9256,125.6018 L360.8153,126.4025 L360.2968,124.3588 \" + \"L361.9519,121.1623 L360.4475,118.7162 L358.1163,117.8678 L358.7094,115.7577 L361.6243,112.4576 Z\", /// Keelung City\n      \"M380.2689,113.3850 L383.5604,114.2370 L383.7404,114.2386 L385.4082,115.6247 L384.9725,117.4631 \" + \"L381.6681,117.9439 L383.0209,121.0914 L379.4649,122.7061 L373.4987,118.8487 L372.0980,114.7589 \" + \"L377.9716,112.0707 Z\", /// Taipei County\n      \"M359.4486,155.6690 L357.0422,152.7420 L355.1688,148.0173 L357.1186,145.8045 L354.1323,141.2242 \" + \"L351.1807,141.6609 L348.9387,140.5372 L349.5415,137.8396 L347.5174,136.1694 L347.6299,129.2327 \" + \"L351.4192,128.8067 L354.2518,125.3113 L352.5805,121.8038 L349.3190,120.9429 L344.3277,116.7676 \" + \"L350.9772,115.1221 L354.5759,112.5371 L354.5667,110.6949 L357.4098,105.7489 L362.3963,101.8443 \" + \"L364.4415,101.0819 L364.5314,101.0828 L364.6209,101.1230 L364.7698,101.2029 L368.1221,101.5115 \" + \"L371.7216,104.1338 L372.2958,106.7261 L375.5949,109.6971 L377.0415,108.8875 L377.0737,108.6526 \" + \"L377.4037,108.6165 L376.8840,109.7091 L376.7323,109.9037 L377.9416,112.0705 L371.7970,114.8736 \" + \"L374.0935,119.4031 L380.7848,122.7963 L382.6529,121.9897 L381.5792,117.8256 L385.0339,117.3069 \" + \"L385.4082,115.6247 L388.7014,116.3969 L389.8697,116.6024 L390.0206,116.4860 L391.0396,116.6118 \" + \"L394.6665,116.9929 L394.4694,119.2255 L394.3172,119.4987 L395.3792,121.8977 L395.2728,124.0526 \" + \"L397.2123,125.6350 L401.1709,126.2516 L401.2612,126.2130 L401.4086,126.6060 L400.1992,127.7733 \" + \"L399.7769,128.0446 L399.6247,128.3179 L398.1779,129.0521 L394.2418,129.2969 L388.7324,130.9385 \" + \"L389.2782,134.0003 L383.7237,137.0111 L381.7445,139.9336 L379.7001,139.9546 L376.1539,143.0580 \" + \"L371.3022,144.1094 L368.6009,146.5914 L368.7361,151.1399 L363.6153,154.4980 \" + /// Taipei County hole.\n      \"M363.4600,128.3904 L366.6300,130.3829 L369.3732,129.3913 L369.5603,125.6695 L374.3989,125.1677 \" + \"L370.8412,123.6440 L371.0684,118.8252 L369.0431,117.3157 L369.6882,115.7936 L367.8578,112.8749 \" + \"L368.1217,110.4867 L366.5152,109.2554 L361.9554,112.3435 L358.1163,117.8678 L361.7218,120.2192 \" + \"L360.7261,126.3232 L362.8064,125.5221 Z\"];\n      obj.depths = [19, 20, 21];\n      obj.colors = [0xb2edff, 0x7abcff, 0x67c2ff];\n      obj.center = {\n        x: 365,\n        y: 125\n      };\n      return obj;\n    };\n\n    return _this;\n  }\n\n  _createClass(Scene, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.start = this.start.bind(this);\n      this.stop = this.stop.bind(this);\n      this.animate = this.animate.bind(this);\n      var width = 800;\n      var height = 600; // const width = window.innerWidth;\n      // const height =  window.innerHeight;\n\n      var scene = new THREE.Scene(); // const camera = new THREE.PerspectiveCamera(\n      //   50, width/height,1,1000\n      // )\n\n      var camera = new THREE.PerspectiveCamera(50, width / height, 1, 1000);\n      camera.position.set(0, 0, 200); // camera.position.z = 5;\n\n      var renderer = new THREE.WebGLRenderer({\n        antialias: true\n      });\n      renderer.setClearColor('#fff');\n      renderer.setSize(width, height); // const geometry = new THREE.BoxGeometry( 1, 1, 1 );\n      // const material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\n      //\n\n      var group = new THREE.Group();\n      scene.add(group); //\n\n      var directionalLight = new THREE.DirectionalLight(0x67c2ff); // directionalLight.position.set( 0.75, 0.75, 1.0 ).normalize();\n\n      scene.add(directionalLight);\n      var ambientLight = new THREE.AmbientLight(0x67c2ff, 0.2);\n      scene.add(ambientLight); //\n      //   const helper = new THREE.GridHelper( 160, 50 );\n      //   helper.rotation.x = Math.PI / 2;\n      //   group.add( helper );\n\n      var obj = this.initSVGObject();\n      this.addGeoObject(group, obj);\n      var controls = new OrbitControls(camera, renderer.domElement);\n      controls.enableDamping = true;\n      controls.dampingFactor = 0.25;\n      controls.enableZoom = false;\n      this.scene = scene;\n      this.camera = camera;\n      this.renderer = renderer;\n      this.mount.appendChild(this.renderer.domElement);\n      this.start();\n      window.addEventListener('resize', this.onWindowResize, false);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.stop();\n      this.mount.removeChild(this.renderer.domElement);\n    }\n  }, {\n    key: \"start\",\n    value: function start() {\n      if (!this.frameId) {\n        this.frameId = requestAnimationFrame(this.animate);\n      }\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      cancelAnimationFrame(this.frameId);\n    }\n  }, {\n    key: \"animate\",\n    value: function animate() {\n      //this.props.cubes.map(cube => this.addElement(cube.geometry))\n      this.renderScene();\n      this.frameId = window.requestAnimationFrame(this.animate);\n    }\n  }, {\n    key: \"renderScene\",\n    value: function renderScene() {\n      this.renderer.render(this.scene, this.camera);\n    }\n  }, {\n    key: \"addElement\",\n    value: function addElement(element) {\n      this.scene.add(element);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"WebGL-output\",\n        ref: function ref(mount) {\n          _this2.mount = mount;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Scene;\n}(Component);\n\nexport { Scene as default };","map":{"version":3,"sources":["/home/matt/web/paycharts2/src/components/three/Scene.js"],"names":["React","Component","THREE","OrbitControls","DEGS_TO_RADS","Math","PI","DIGIT_0","DIGIT_9","COMMA","SPACE","PERIOD","MINUS","Scene","onWindowResize","camera","aspect","window","innerWidth","innerHeight","updateProjectionMatrix","renderer","setSize","transformSVGPath","pathStr","path","ShapePath","idx","len","length","activeCmd","x","y","nx","ny","firstX","firstY","x1","x2","y1","y2","rx","ry","xar","laf","sf","cx","cy","eatNum","sidx","c","isFloat","s","charCodeAt","substring","parseFloat","parseInt","nextIsNum","canRepeat","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","console","warn","cos","sin","norm","sqrt","u","Vector2","v","startAng","acos","dot","deltaAng","absarc","Error","addGeoObject","group","svgObject","paths","depths","colors","center","i","color","Color","material","MeshLambertMaterial","emissive","depth","simpleShapes","toShapes","j","simpleShape","shape3d","ExtrudeBufferGeometry","bevelEnabled","mesh","Mesh","rotation","translateZ","translateX","translateY","add","initSVGObject","obj","start","bind","stop","animate","width","height","scene","PerspectiveCamera","position","set","WebGLRenderer","antialias","setClearColor","Group","directionalLight","DirectionalLight","ambientLight","AmbientLight","controls","domElement","enableDamping","dampingFactor","enableZoom","mount","appendChild","addEventListener","removeChild","frameId","requestAnimationFrame","cancelAnimationFrame","renderScene","render","element"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as THREE from 'three';\nimport * as OrbitControls from 'three-orbitcontrols';\nlet DEGS_TO_RADS = Math.PI / 180;\nlet DIGIT_0 = 48;\nlet DIGIT_9 = 57; \nlet COMMA = 44; \nlet SPACE = 32 \nlet PERIOD = 46; \nlet MINUS = 45; \n\nexport default class Scene extends Component{\n\n  componentDidMount(){\n      this.start = this.start.bind(this)\n      this.stop = this.stop.bind(this)\n      this.animate = this.animate.bind(this)\n      const width = 800;\n      const height = 600;\n      // const width = window.innerWidth;\n      // const height =  window.innerHeight;\n      const scene = new THREE.Scene();\n      // const camera = new THREE.PerspectiveCamera(\n      //   50, width/height,1,1000\n      // )\n      const camera = new THREE.PerspectiveCamera(\n        50, width/height,1,1000\n      )\n      camera.position.set( 0, 0, 200 );\n      // camera.position.z = 5;\n      const renderer = new THREE.WebGLRenderer({antialias: true})\n      renderer.setClearColor('#fff')\n      renderer.setSize(width, height)\n      // const geometry = new THREE.BoxGeometry( 1, 1, 1 );\n      // const material = new THREE.MeshBasicMaterial( {color: 0x00ff00} );\n      \n      //\n      const group = new THREE.Group();\n      scene.add( group );\n      //\n      const directionalLight = new THREE.DirectionalLight( 0x67c2ff);\n      // directionalLight.position.set( 0.75, 0.75, 1.0 ).normalize();\n      scene.add( directionalLight );\n      const ambientLight = new THREE.AmbientLight( 0x67c2ff, 0.2 );\n      scene.add( ambientLight );\n      //\n    //   const helper = new THREE.GridHelper( 160, 50 );\n    //   helper.rotation.x = Math.PI / 2;\n    //   group.add( helper );\n\n      \n      const obj = this.initSVGObject();\n      this.addGeoObject( group, obj );\n      const controls = new OrbitControls( camera, renderer.domElement );\n      controls.enableDamping = true\n      controls.dampingFactor = 0.25\n      controls.enableZoom = false\n\n      this.scene = scene\n      this.camera = camera\n      this.renderer = renderer\n      this.mount.appendChild(this.renderer.domElement)\n      this.start()\n      window.addEventListener('resize', this.onWindowResize, false );\n  }\n\n  onWindowResize = () => {\n    this.camera.aspect = window.innerWidth / window.innerHeight;\n    this.camera.updateProjectionMatrix();\n    this.renderer.setSize( window.innerWidth, window.innerHeight );\n }\n\n  componentWillUnmount(){\n    this.stop()\n    this.mount.removeChild(this.renderer.domElement)\n  }\n\n  transformSVGPath = ( pathStr )  => {\n    let path = new THREE.ShapePath();\n    let idx = 1, len = pathStr.length, activeCmd,\n        x = 0, y = 0, nx = 0, ny = 0, firstX = null, firstY = null,\n        x1 = 0, x2 = 0, y1 = 0, y2 = 0,\n        rx = 0, ry = 0, xar = 0, laf = 0, sf = 0, cx, cy;\n    const eatNum = () => {\n        let sidx, c, isFloat = false, s;\n        // eat delims\n        while ( idx < len ) {\n            c = pathStr.charCodeAt( idx );\n            if ( c !== COMMA && c !== SPACE ) break;\n            idx ++;\n        }\n        if ( c === MINUS ) {\n            sidx = idx ++;\n        } else {\n            sidx = idx;\n        }\n        // eat number\n        while ( idx < len ) {\n            c = pathStr.charCodeAt( idx );\n            if ( DIGIT_0 <= c && c <= DIGIT_9 ) {\n                idx ++;\n                continue;\n            } else if ( c === PERIOD ) {\n                idx ++;\n                isFloat = true;\n                continue;\n            }\n            s = pathStr.substring( sidx, idx );\n            return isFloat ? parseFloat( s ) : parseInt( s );\n        }\n        s = pathStr.substring( sidx );\n        return isFloat ? parseFloat( s ) : parseInt( s );\n    }\n    const nextIsNum = () => {\n        let c;\n        // do permanently eat any delims...\n        while ( idx < len ) {\n            c = pathStr.charCodeAt( idx );\n            if ( c !== COMMA && c !== SPACE ) break;\n            idx ++;\n        }\n        c = pathStr.charCodeAt( idx );\n        return ( c === MINUS || ( DIGIT_0 <= c && c <= DIGIT_9 ) );\n    }\n    let canRepeat;\n    activeCmd = pathStr[ 0 ];\n    while ( idx <= len ) {\n        canRepeat = true;\n        switch ( activeCmd ) {\n            // moveto commands, become lineto's if repeated\n            case 'M':\n                x = eatNum();\n                y = eatNum();\n                path.moveTo( x, y );\n                activeCmd = 'L';\n                firstX = x;\n                firstY = y;\n                break;\n            case 'm':\n                x += eatNum();\n                y += eatNum();\n                path.moveTo( x, y );\n                activeCmd = 'l';\n                firstX = x;\n                firstY = y;\n                break;\n            case 'Z':\n            case 'z':\n                canRepeat = false;\n                if ( x !== firstX || y !== firstY ) path.lineTo( firstX, firstY );\n                break;\n            // - lines!\n            case 'L':\n            case 'H':\n            case 'V':\n                nx = ( activeCmd === 'V' ) ? x : eatNum();\n                ny = ( activeCmd === 'H' ) ? y : eatNum();\n                path.lineTo( nx, ny );\n                x = nx;\n                y = ny;\n                break;\n            case 'l':\n            case 'h':\n            case 'v':\n                nx = ( activeCmd === 'v' ) ? x : ( x + eatNum() );\n                ny = ( activeCmd === 'h' ) ? y : ( y + eatNum() );\n                path.lineTo( nx, ny );\n                x = nx;\n                y = ny;\n                break;\n            // - cubic bezier\n            case 'C':\n                x1 = eatNum(); y1 = eatNum();\n                break;\n            case 'S':\n                if ( activeCmd === 'S' ) {\n                    x1 = 2 * x - x2;\n                    y1 = 2 * y - y2;\n                }\n                x1 = 2 * x - x2;\n                y1 = 2 * y - y2;\n                x2 = eatNum();\n                y2 = eatNum();\n                nx = eatNum();\n                ny = eatNum();\n                path.bezierCurveTo( x1, y1, x2, y2, nx, ny );\n                x = nx; y = ny;\n                break;\n            case 'c':\n                x1 = x + eatNum();\n                y1 = y + eatNum();\n                break;\n            case 's':\n                if ( activeCmd === 's' ) {\n                    x1 = 2 * x - x2;\n                    y1 = 2 * y - y2;\n                }\n                x2 = x + eatNum();\n                y2 = y + eatNum();\n                nx = x + eatNum();\n                ny = y + eatNum();\n                path.bezierCurveTo( x1, y1, x2, y2, nx, ny );\n                x = nx; y = ny;\n                break;\n            // - quadratic bezier\n            case 'Q':\n                x1 = eatNum(); y1 = eatNum();\n                break;\n            case 'T':\n                if ( activeCmd === 'T' ) {\n                    x1 = 2 * x - x1;\n                    y1 = 2 * y - y1;\n                }\n                nx = eatNum();\n                ny = eatNum();\n                path.quadraticCurveTo( x1, y1, nx, ny );\n                x = nx;\n                y = ny;\n                break;\n            case 'q':\n                x1 = x + eatNum();\n                y1 = y + eatNum();\n                break;\n            case 't':\n                if ( activeCmd === 't' ) {\n                    x1 = 2 * x - x1;\n                    y1 = 2 * y - y1;\n                }\n                nx = x + eatNum();\n                ny = y + eatNum();\n                path.quadraticCurveTo( x1, y1, nx, ny );\n                x = nx; y = ny;\n                break;\n            // - elliptical arc\n            case 'A':\n                rx = eatNum();\n                ry = eatNum();\n                xar = eatNum() * DEGS_TO_RADS;\n                laf = eatNum();\n                sf = eatNum();\n                nx = eatNum();\n                ny = eatNum();\n                if ( rx !== ry ) console.warn( 'Forcing elliptical arc to be a circular one:', rx, ry );\n                // SVG implementation notes does all the math for us! woo!\n                // http://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n                // step1, using x1 as x1'\n                x1 = Math.cos( xar ) * ( x - nx ) / 2 + Math.sin( xar ) * ( y - ny ) / 2;\n                y1 = - Math.sin( xar ) * ( x - nx ) / 2 + Math.cos( xar ) * ( y - ny ) / 2;\n                // step 2, using x2 as cx'\n                var norm = Math.sqrt( ( rx * rx * ry * ry - rx * rx * y1 * y1 - ry * ry * x1 * x1 ) /\n                     ( rx * rx * y1 * y1 + ry * ry * x1 * x1 ) );\n                if ( laf === sf ) norm = - norm;\n                x2 = norm * rx * y1 / ry;\n                y2 = norm * - ry * x1 / rx;\n                // step 3\n                cx = Math.cos( xar ) * x2 - Math.sin( xar ) * y2 + ( x + nx ) / 2;\n                cy = Math.sin( xar ) * x2 + Math.cos( xar ) * y2 + ( y + ny ) / 2;\n                var u = new THREE.Vector2( 1, 0 );\n                var v = new THREE.Vector2( ( x1 - x2 ) / rx, ( y1 - y2 ) / ry );\n                var startAng = Math.acos( u.dot( v ) / u.length() / v.length() );\n                if ( ( ( u.x * v.y ) - ( u.y * v.x ) ) < 0 ) startAng = - startAng;\n                // we can reuse 'v' from start angle as our 'u' for delta angle\n                u.x = ( - x1 - x2 ) / rx;\n                u.y = ( - y1 - y2 ) / ry;\n                var deltaAng = Math.acos( v.dot( u ) / v.length() / u.length() );\n                // This normalization ends up making our curves fail to triangulate...\n                if ( ( ( v.x * u.y ) - ( v.y * u.x ) ) < 0 ) deltaAng = - deltaAng;\n                if ( ! sf && deltaAng > 0 ) deltaAng -= Math.PI * 2;\n                if ( sf && deltaAng < 0 ) deltaAng += Math.PI * 2;\n                path.absarc( cx, cy, rx, startAng, startAng + deltaAng, sf );\n                x = nx;\n                y = ny;\n                break;\n            default:\n                throw new Error( 'Wrong path command: ' + activeCmd );\n        }\n        // just reissue the command\n        if ( canRepeat && nextIsNum() ) continue;\n        activeCmd = pathStr[ idx ++ ];\n    }\n    return path;\n  };\n\n  addGeoObject = ( group, svgObject ) => {\n    let paths = svgObject.paths;\n    let depths = svgObject.depths;\n    let colors = svgObject.colors;\n    let center = svgObject.center;\n    for ( let i = 0; i < paths.length; i ++ ) {\n        let path = this.transformSVGPath( paths[ i ] );\n        let color = new THREE.Color( colors[ i ] );\n        let material = new THREE.MeshLambertMaterial( {\n            color: color,\n            emissive: color\n        } );\n        let depth = depths[ i ];\n        let simpleShapes = path.toShapes( true );\n        for ( let j = 0; j < simpleShapes.length; j ++ ) {\n            let simpleShape = simpleShapes[ j ];\n            let shape3d = new THREE.ExtrudeBufferGeometry( simpleShape, {\n                depth: depth,\n                bevelEnabled: false\n            } );\n            const mesh = new THREE.Mesh( shape3d, material );\n            mesh.rotation.x = Math.PI;\n            mesh.translateZ( - depth - 1 );\n            mesh.translateX( - center.x );\n            mesh.translateY( - center.y );\n            group.add( mesh );\n        }\n    }\n  };\n\n  initSVGObject = () => {\n    let obj = {};\n    /// The geo data from Taipei City, Keelung City, Taipei County in SVG form\n    obj.paths = [\n        /// Taipei City\n        \"M366.2182,108.9780 L368.0329,110.3682 L367.5922,112.4411 L369.9258,116.0311 L368.9827,117.3543 \" +\n        \"L371.5686,119.8491 L370.5599,121.7206 L372.9314,124.8009 L368.8889,126.7603 L369.2695,130.7622 \" +\n        \"L366.1499,130.3388 L363.4698,128.1161 L362.9256,125.6018 L360.8153,126.4025 L360.2968,124.3588 \" +\n        \"L361.9519,121.1623 L360.4475,118.7162 L358.1163,117.8678 L358.7094,115.7577 L361.6243,112.4576 Z\",\n        /// Keelung City\n        \"M380.2689,113.3850 L383.5604,114.2370 L383.7404,114.2386 L385.4082,115.6247 L384.9725,117.4631 \" +\n        \"L381.6681,117.9439 L383.0209,121.0914 L379.4649,122.7061 L373.4987,118.8487 L372.0980,114.7589 \" +\n        \"L377.9716,112.0707 Z\",\n        /// Taipei County\n        \"M359.4486,155.6690 L357.0422,152.7420 L355.1688,148.0173 L357.1186,145.8045 L354.1323,141.2242 \" +\n        \"L351.1807,141.6609 L348.9387,140.5372 L349.5415,137.8396 L347.5174,136.1694 L347.6299,129.2327 \" +\n        \"L351.4192,128.8067 L354.2518,125.3113 L352.5805,121.8038 L349.3190,120.9429 L344.3277,116.7676 \" +\n        \"L350.9772,115.1221 L354.5759,112.5371 L354.5667,110.6949 L357.4098,105.7489 L362.3963,101.8443 \" +\n        \"L364.4415,101.0819 L364.5314,101.0828 L364.6209,101.1230 L364.7698,101.2029 L368.1221,101.5115 \" +\n        \"L371.7216,104.1338 L372.2958,106.7261 L375.5949,109.6971 L377.0415,108.8875 L377.0737,108.6526 \" +\n        \"L377.4037,108.6165 L376.8840,109.7091 L376.7323,109.9037 L377.9416,112.0705 L371.7970,114.8736 \" +\n        \"L374.0935,119.4031 L380.7848,122.7963 L382.6529,121.9897 L381.5792,117.8256 L385.0339,117.3069 \" +\n        \"L385.4082,115.6247 L388.7014,116.3969 L389.8697,116.6024 L390.0206,116.4860 L391.0396,116.6118 \" +\n        \"L394.6665,116.9929 L394.4694,119.2255 L394.3172,119.4987 L395.3792,121.8977 L395.2728,124.0526 \" +\n        \"L397.2123,125.6350 L401.1709,126.2516 L401.2612,126.2130 L401.4086,126.6060 L400.1992,127.7733 \" +\n        \"L399.7769,128.0446 L399.6247,128.3179 L398.1779,129.0521 L394.2418,129.2969 L388.7324,130.9385 \" +\n        \"L389.2782,134.0003 L383.7237,137.0111 L381.7445,139.9336 L379.7001,139.9546 L376.1539,143.0580 \" +\n        \"L371.3022,144.1094 L368.6009,146.5914 L368.7361,151.1399 L363.6153,154.4980 \" +\n        /// Taipei County hole.\n        \"M363.4600,128.3904 L366.6300,130.3829 L369.3732,129.3913 L369.5603,125.6695 L374.3989,125.1677 \" +\n        \"L370.8412,123.6440 L371.0684,118.8252 L369.0431,117.3157 L369.6882,115.7936 L367.8578,112.8749 \" +\n        \"L368.1217,110.4867 L366.5152,109.2554 L361.9554,112.3435 L358.1163,117.8678 L361.7218,120.2192 \" +\n        \"L360.7261,126.3232 L362.8064,125.5221 Z\" ];\n    obj.depths = [ 19, 20, 21 ];\n    obj.colors = [ 0xb2edff, 0x7abcff, 0x67c2ff ];\n    obj.center = { x: 365, y: 125 };\n    return obj;\n};\n\n  start() {\n    if (!this.frameId) {\n      this.frameId = requestAnimationFrame(this.animate)\n    }\n  }\n\n  stop() {\n    cancelAnimationFrame(this.frameId)\n  }\n\n  animate() {\n    //this.props.cubes.map(cube => this.addElement(cube.geometry))\n    this.renderScene()\n    this.frameId =  window.requestAnimationFrame(this.animate)\n  }\n\n  renderScene() {\n    this.renderer.render(this.scene, this.camera)\n  }\n\n  addElement(element){\n    this.scene.add(element)\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          id=\"WebGL-output\"\n          ref={(mount) => { this.mount = mount }}\n        />\n      </div>\n\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}